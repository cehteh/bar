#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Validate help navigation behaviour when forcing a pager

function first_line ## - Get first line of command output
{
    local line fd
    exec {fd}< <("$@")
    if IFS= read -r line <&$fd; then
        printf '%s\n' "$line"
        exec {fd}<&-
        return 0
    fi
    exec {fd}<&-
    return 1
}

function first_non_empty_line ## - Get first non-empty line of command output
{
    local line fd
    exec {fd}< <("$@")
    while IFS= read -r line <&$fd; do
        [[ -z "$line" ]] && continue
        printf '%s\n' "$line"
        exec {fd}<&-
        return 0
    done
    exec {fd}<&-
    return 1
}

function test_help_about_jumps ## - Indexed match should jump directly to ABOUT
{
    local about_line
    about_line="$(BAR_FORCE_PAGER=less first_line ./bar --bare help about)" || return 1
    [[ "$about_line" =~ ^[[:space:]]*ABOUT[[:space:]]*$ ]]
}

function test_help_fallback ## - Unknown query should fall back to full help without failing
{
    local fallback_line
    fallback_line="$(BAR_FORCE_PAGER=less first_non_empty_line ./bar --bare help __does_not_exist)" || return 1
    [[ "$fallback_line" =~ ^[[:space:]]*bar[[:space:]]-- ]]
}

function test_help_no_doc_example ## - Example documentation should not be treated as real symbol
{
    local foo_line
    foo_line="$(BAR_FORCE_PAGER=less first_non_empty_line ./bar --bare help foo)" || return 1
    ! [[ "$foo_line" =~ foo ]]
}

function test_help_partial_function ## - Partial function name should resolve to git_ls_files
{
    local ls_line
    ls_line="$(BAR_FORCE_PAGER=less first_line ./bar --bare help ls_files)" || return 1
    [[ "$ls_line" =~ ls_files ]]
}

function test_help_no_query ## - No query should still succeed under BAR_FORCE_PAGER when piped
{
    local header_line
    header_line="$(BAR_FORCE_PAGER=less first_non_empty_line ./bar --bare help)" || return 1
    [[ "$header_line" =~ ^[[:space:]]*bar[[:space:]]-- ]]
}

function test_help_section ## - --section should include the matching section
{
    local section_output
    section_output="$(BAR_FORCE_PAGER=less ./bar --bare help --section ABOUT)" || return 1
    [[ "$section_output" =~ ABOUT ]]
}

## Run all help navigation tests
rule test_help_navigation: -- test_help_about_jumps
rule test_help_navigation: -- test_help_fallback
rule test_help_navigation: -- test_help_no_doc_example
rule test_help_navigation: -- test_help_partial_function
rule test_help_navigation: -- test_help_no_query
rule test_help_navigation: -- test_help_section
