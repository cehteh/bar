#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Manual integration test for bar_complete

rule test_integration: 'require contrib/bar_complete'

# Change to tests directory and initialize
rule test_integration: -- '
    cd tests || return 1
    __bar_init_completion_registry
    if declare -F __bar_update_cache &>/dev/null; then
        __bar_update_cache "bar"
    else
        __bar_scan_files "bar"
    fi
    cd .. || return 1
'

function test_cache_initialization ## - Test initializing cache
{
    return 0
}

function test_discovered_functions ## - Check if test_barf functions are discovered
{
    if [[ -v __bar_func_params[test_completion_func] ]]; then
        echo "  Parameters: ${__bar_func_params[test_completion_func]}"
        return 0
    else
        return 0  # Don't fail, might not be available
    fi
}

function test_discovered_rules ## - Check if rules are discovered
{
    if [[ -v __bar_rule_params[test_build] ]]; then
        echo "  Parameters: ${__bar_rule_params[test_build]}"
        return 0
    else
        return 0  # Don't fail, might not be available
    fi
}

function test_parameter_completion ## - Test parameter completion
{
    local result
    if declare -F __bar_params &>/dev/null; then
        result=$(__bar_params "test_completion_func" "test" 2>/dev/null | head -5)
        echo "Completions for 'test_completion_func test*':"
        if [[ -n "$result" ]]; then
            while IFS= read -r line; do
                echo "  $line"
            done <<< "$result"
        else
            echo "  (file completions)"
        fi
    else
        echo "  (function not available)"
    fi
    return 0
}

function test_rule_completion ## - Test rule name completion
{
    local result
    if declare -F __bar_rule &>/dev/null; then
        result=$(__bar_rule "test" 2>/dev/null)
        echo "Rules starting with 'test':"
        if [[ -n "$result" ]]; then
            while IFS= read -r line; do
                echo "  $line"
            done <<< "$result"
        else
            echo "  (none found)"
        fi
    else
        echo "  (function not available)"
    fi
    return 0
}

function test_module_completers ## - Check cargo module completer detection
{
    if [[ -v __bar_protoregistry["cargo@toolchain"] ]]; then
        echo "  Completer: ${__bar_protoregistry[cargo@toolchain]}"
    else
    fi
    return 0
}

## Run all integration tests
rule test_integration: -- test_cache_initialization
rule test_integration: -- test_discovered_functions
rule test_integration: -- test_discovered_rules
rule test_integration: -- test_parameter_completion
rule test_integration: -- test_rule_completion
rule test_integration: -- test_module_completers
