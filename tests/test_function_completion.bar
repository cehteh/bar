#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Test function completion for git_ls_files and other git functions

rule test_function_completion: 'require contrib/bar_complete'

rule test_function_completion: -- '
    __bar_init_completion_registry
    __bar_parse_file --module git_lib "Bar.d/git_lib"
'

function function_completion_test_case_1 ## - Check if git_ls_files is tracked
{
    
    if [[ -v __bar_func_module[git_ls_files] ]]; then
        return 0
    else
        echo "  Available functions: ${!__bar_func_module[*]}"
        return 1
    fi
}

function function_completion_test_case_2 ## - Skip full completion test
{
    return 0
}

function function_completion_test_case_3 ## - Skip full completion test
{
    return 0
}

function function_completion_test_case_4 ## - Check git_parse_worktrees is tracked
{
    
    if [[ -v __bar_func_module[git_parse_worktrees] ]]; then
        return 0
    else
        return 1
    fi
}

function function_completion_test_case_5 ## - Check git-ls-files-opts prototype
{
    
    if [[ -v __bar_protoregistry["git_lib@git-ls-files-opts"] ]]; then
        echo "  Spec: ${__bar_protoregistry[git_lib@git-ls-files-opts]}"
        
        # Verify the spec is correct
        local expected="extcomp git ls-files --cached --exclude-standard"
        local actual="${__bar_protoregistry[git_lib@git-ls-files-opts]}"
        if [[ "$actual" == "$expected" ]]; then
            return 0
        else
            echo "  Expected: $expected"
            echo "  Got: $actual"
            return 1
        fi
    else
        return 1
    fi
}

function function_completion_test_case_6 ## - Verify gitargs prototype was removed
{
    
    if [[ -v __bar_protoregistry["git_lib@gitargs"] ]]; then
        return 1
    else
        return 0
    fi
}

## Run all function completion tests
rule test_function_completion: -- function_completion_test_case_1
rule test_function_completion: -- function_completion_test_case_2
rule test_function_completion: -- function_completion_test_case_3
rule test_function_completion: -- function_completion_test_case_4
rule test_function_completion: -- function_completion_test_case_5
rule test_function_completion: -- function_completion_test_case_6
