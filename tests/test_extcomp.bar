#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Test external command completion (black-box forwarding)

rule test_extcomp: 'require contrib/bar_complete'

function test_git_completion ## - Test git completion
{
    
    if command -v git &>/dev/null; then
        local completions all_completions completion_count
        completions=$(__bar_comp_extcomp git che 2>/dev/null)
        
        if echo "$completions" | grep -q "checkout"; then
        else
            echo "  Got: $(echo "$completions" | head -3 | tr '\n' ' ')"
        fi
        
        # Test git with no prefix
        all_completions=$(__bar_comp_extcomp git "" 2>/dev/null)
        completion_count=$(echo "$all_completions" | wc -l)
        
        if [[ $completion_count -gt 20 ]]; then
        else
        fi
    else
    fi
    return 0
}

function test_fallback_completion ## - Test fallback for command without completion
{
    
    local completions
    completions=$(__bar_comp_extcomp nonexistent_cmd test 2>/dev/null)
    
    if [[ -n "$completions" ]]; then
    else
    fi
    return 0
}

function test_ls_completion ## - Test ls completion
{
    
    if command -v ls &>/dev/null; then
        local completions
        completions=$(__bar_comp_extcomp ls --col 2>/dev/null)
        
        if echo "$completions" | grep -q "color"; then
        else
            echo "  Got: $(echo "$completions" | head -3 | tr '\n' ' ')"
        fi
    fi
    return 0
}

function test_ssh_completion ## - Test SSH completion
{
    
    if command -v ssh &>/dev/null; then
        local completions completion_count
        # SSH completion might complete hostnames from known_hosts
        completions=$(__bar_comp_extcomp ssh "" 2>/dev/null | head -10)
        
        if [[ -n "$completions" ]]; then
            completion_count=$(echo "$completions" | wc -l)
            echo "  Got $completion_count completions"
        else
        fi
    fi
    return 0
}

function test_function_availability ## - Test function availability
{
    
    if type -t __bar_comp_extcomp &>/dev/null; then
        return 0
    else
        return 1
    fi
}

function test_multiple_arguments ## - Test with multiple arguments
{
    
    if command -v git &>/dev/null; then
        local old_dir completions
        old_dir=$(pwd)
        # Simulate: git checkout <branch>
        cd /tmp || return 0
        git init test_repo &>/dev/null && cd test_repo || { cd "$old_dir" || return 0; return 0; }
        git checkout -b main &>/dev/null 2>&1
        git checkout -b feature/test &>/dev/null 2>&1
        
        completions=$(__bar_comp_extcomp git checkout fea 2>/dev/null)
        
        if echo "$completions" | grep -q "feature"; then
        else
            echo "  Got: $(echo "$completions" | head -3 | tr '\n' ' ')"
        fi
        
        cd "$old_dir" || return 0
        rm -rf /tmp/test_repo
    fi
    return 0
}

function test_prototype_integration ## - Test extcomp prototype integration
{
    
    echo "  Usage: # prototype: \"gitargs\" = \"extcomp git\""
    echo "  This enables black-box forwarding to any command's bash completion"
    return 0
}

## Run all external command completion tests
rule test_extcomp: -- test_git_completion
rule test_extcomp: -- test_fallback_completion
rule test_extcomp: -- test_ls_completion
rule test_extcomp: -- test_ssh_completion
rule test_extcomp: -- test_function_availability
rule test_extcomp: -- test_multiple_arguments
rule test_extcomp: -- test_prototype_integration
