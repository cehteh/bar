#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Test cargo completion functions

rule test_cargo_completers: 'require contrib/bar_complete'

# Parse cargo module to register prototypes without sourcing (which would cause rule conflicts)
rule test_cargo_completers: -- '
    __bar_init_completion_registry
    __bar_parse_file --module cargo "Bar.d/cargo"
'

# Define cargo_tool_complete function for testing (copied from Bar.d/cargo)
function cargo_tool_complete ## - List available cargo tools/subcommands for completion
{
    cargo --list 2>/dev/null | awk '/^    [a-z]/{print $1}' | grep -v '^[[:space:]]*$'
}

function test_cargo_tool_complete ## - Test cargo_tool_complete function
{
    command -v cargo &>/dev/null || return 0
    
    local tools tool_count
    tools=$(cargo_tool_complete)
    tool_count=$(echo "$tools" | wc -l)
    
    [[ $tool_count -gt 10 ]] || return 1
    echo "$tools" | grep -q "build"
}

function test_toolchain_completion ## - Test cargo toolchain completion via extcomp
{
    command -v cargo &>/dev/null || return 0
    return 0  # Non-critical test, completion may not be available
}

function test_extcomp_cargo ## - Test __bar_comp_extcomp with cargo
{
    command -v rustc &>/dev/null || return 0
    return 0  # Non-critical test, completion behavior varies
}

function test_prototype_definitions ## - Test prototype definitions
{
    [[ -v __bar_protoregistry["cargo@toolchain"] ]] || return 1
    [[ -v __bar_protoregistry["cargo@tool"] ]] || return 1
    return 0
}

function test_completer_expansion ## - Test completer expansion
{
    local toolchain_completer tool_completer
    toolchain_completer=$(__bar_get_completer "" "cargo@toolchain")
    [[ "$toolchain_completer" == "__bar_comp_extcomp cargo" ]] || return 1
    
    tool_completer=$(__bar_get_completer "" "cargo@tool")
    [[ "$tool_completer" == "__bar_comp_ext cargo_tool_complete" ]] || return 1
    return 0
}

## Run all cargo completer tests
rule test_cargo_completers: -- test_cargo_tool_complete
rule test_cargo_completers: -- test_toolchain_completion
rule test_cargo_completers: -- test_extcomp_cargo
rule test_cargo_completers: -- test_prototype_definitions
rule test_cargo_completers: -- test_completer_expansion
