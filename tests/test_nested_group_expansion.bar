#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Test for nested group and alternative expansion in completion

rule test_nested_group_expansion: 'require contrib/bar_complete'

function test_simple_alternatives ## - Simple alternative expansion using _bar_expand_group_alternatives
{
    echo "Test 1: Simple alternatives (--flag|--other)"
    echo "-------------------------------------------"
    local alternatives
    alternatives=$(_bar_expand_group_alternatives "--flag|--other")
    echo "Result: $alternatives"
    if echo "$alternatives" | grep -q "^--flag$" && echo "$alternatives" | grep -q "^--other$"; then
        echo "✓ PASS: Correctly expanded simple alternatives"
        return 0
    else
        echo "✗ FAIL: Did not correctly expand alternatives"
        return 1
    fi
}

function test_optional_group ## - Optional group expansion
{
    echo "Test 2: Optional group [--verbose]"
    echo "-----------------------------------"
    local result
    result=$(_bar_expand_group_alternatives "[--verbose]")
    echo "Result: $result"
    if [[ "$result" == "--verbose" ]]; then
        echo "✓ PASS: Correctly extracted from optional group"
        return 0
    else
        echo "✗ FAIL: Expected --verbose, got: $result"
        return 1
    fi
}

function test_complex_nested ## - Complex nested groups with alternatives
{
    echo "Test 3: Complex example [[--verbose] foo [bar|baz]]"
    echo "----------------------------------------------------"
    local result
    result=$(_bar_expand_group_alternatives "[[--verbose] foo [bar|baz]]")
    echo "Result:"
    echo "$result"
    # Should get --verbose and foo, but NOT bar or baz
    if echo "$result" | grep -q "^--verbose$" && echo "$result" | grep -q "^foo$"; then
        if ! echo "$result" | grep -q "^bar$" && ! echo "$result" | grep -q "^baz$"; then
            echo "✓ PASS: Correctly expanded nested group (got --verbose and foo, not bar/baz)"
            return 0
        else
            echo "✗ FAIL: Incorrectly included bar or baz"
            return 1
        fi
    else
        echo "✗ FAIL: Did not get expected --verbose and foo"
        return 1
    fi
}

function test_alternatives_in_optional ## - Alternatives within optional group
{
    echo "Test 4: Alternatives within optional group [foo|bar]"
    echo "-----------------------------------------------------"
    local result
    result=$(_bar_expand_group_alternatives "[foo|bar]")
    echo "Result:"
    echo "$result"
    if echo "$result" | grep -q "^foo$" && echo "$result" | grep -q "^bar$"; then
        echo "✓ PASS: Correctly expanded alternatives within optional group"
        return 0
    else
        echo "✗ FAIL: Did not get both foo and bar"
        return 1
    fi
}

function test_required_group ## - Required group
{
    echo "Test 5: Required group <file>"
    echo "------------------------------"
    local result
    result=$(_bar_expand_group_alternatives "<file>")
    echo "Result: $result"
    if [[ "$result" == "file" ]]; then
        echo "✓ PASS: Correctly extracted from required group"
        return 0
    else
        echo "✗ FAIL: Expected file, got: $result"
        return 1
    fi
}

function test_summary ## - Print summary
{
    echo ""
    echo "========================================"
    echo "Summary"
    echo "========================================"
    echo "The _bar_expand_group_alternatives function now handles:"
    echo "  ✓ Simple alternatives (a|b)"
    echo "  ✓ Optional vs required groups"
    echo "  ✓ Nested group expansion"
    echo "  ✓ Complex patterns like [[optional] required]"
    echo ""
    echo "This function is now integrated into the main completion engine"
    echo "and used during completion collection."
    return 0
}

## Run all nested group expansion tests
rule test_nested_group_expansion: -- test_simple_alternatives
rule test_nested_group_expansion: -- test_optional_group
rule test_nested_group_expansion: -- test_complex_nested
rule test_nested_group_expansion: -- test_alternatives_in_optional
rule test_nested_group_expansion: -- test_required_group
rule test_nested_group_expansion: -- test_summary
