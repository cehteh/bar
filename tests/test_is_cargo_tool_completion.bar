#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Test completion for is_cargo_tool_installed

rule test_is_cargo_tool_completion: 'require contrib/bar_complete'

rule test_is_cargo_tool_completion: -- '__bar_parse_file Bar.d/cargo'

function test_function_tracked ## - Verify function is tracked
{
    if [[ " ${__bar_functions[*]} " == *" is_cargo_tool_installed "* ]]; then
        return 0
    else
        return 1
    fi
}

function test_params_stored ## - Verify params are stored correctly
{
    local params expected
    params="${__bar_func_params[is_cargo_tool_installed]}"
    expected="[+toolchain] <tool> [args..]"
    if [[ "$params" == "$expected" ]]; then
        return 0
    else
        return 1
    fi
}

function test_prototypes_registered ## - Verify prototypes are registered for cargo module
{
    local status=0
    if [[ -v __bar_protoregistry[cargo@toolchain] ]]; then
    else
        status=1
    fi
    
    if [[ -v __bar_protoregistry[cargo@tool] ]]; then
    else
        status=1
    fi
    return $status
}

function test_module_tracking ## - Verify module tracking
{
    if [[ "${__bar_func_module[is_cargo_tool_installed]}" == "cargo" ]]; then
        return 0
    else
        return 1
    fi
}

function test_literal_punctuation ## - Verify literal punctuation extraction
{
    local punct_parts proto_clean literal_prefix literal_suffix
    mapfile -t punct_parts < <(_bar_extract_literal_punct "+toolchain")
    proto_clean="${punct_parts[0]}"
    literal_prefix="${punct_parts[1]}"
    literal_suffix="${punct_parts[2]}"
    
    if [[ "$proto_clean" == "toolchain" && "$literal_prefix" == "+" && "$literal_suffix" == "" ]]; then
        echo "  Clean proto: '$proto_clean'"
        echo "  Literal prefix: '$literal_prefix'"
        return 0
    else
        echo "  Clean proto: '$proto_clean' (expected 'toolchain')"
        echo "  Literal prefix: '$literal_prefix' (expected '+')"
        return 1
    fi
}

## Run all is_cargo_tool_completion tests
rule test_is_cargo_tool_completion: -- test_function_tracked
rule test_is_cargo_tool_completion: -- test_params_stored
rule test_is_cargo_tool_completion: -- test_prototypes_registered
rule test_is_cargo_tool_completion: -- test_module_tracking
rule test_is_cargo_tool_completion: -- test_literal_punctuation
