#!/usr/bin/env bar
# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash

### Test cargo completion with ${VARIABLE} expansion in prototypes

rule test_cargo_variable_expansion: 'require contrib/bar_complete'

rule test_cargo_variable_expansion: -- '
    __bar_init_completion_registry
    __bar_parse_file --module cargo "Bar.d/cargo"
'

function test_buildargs_registered ## - Check buildargs prototype registered
{
    [[ -n "${__bar_protoregistry[cargo@buildargs]:-}" ]]
}

function test_buildargs_format ## - Check buildargs prototype format
{
    local proto_val="${__bar_protoregistry[cargo@buildargs]}"
    [[ "$proto_val" == "extcomp cargo \${CARGO_TOOLCHAIN} build --workspace" ]]
}

function test_get_completer_buildargs ## - Test get completer for cargo_build function with buildargs
{
    unset CARGO_TOOLCHAIN
    __bar_func_module[cargo_build]="cargo"
    local completer
    completer=$(__bar_get_completer "cargo_build" "buildargs")
    [[ "$completer" =~ __bar_comp_extcomp ]]
}

function test_completion_with_toolchain ## - Test completion with CARGO_TOOLCHAIN=+nightly
{
    export CARGO_TOOLCHAIN="+nightly"
    [[ -n "$CARGO_TOOLCHAIN" ]]
}

function test_testargs_prototype ## - Check testargs prototype
{
    local proto_val="${__bar_protoregistry[cargo@testargs]}"
    [[ "$proto_val" == "extcomp cargo \${CARGO_TOOLCHAIN} test --workspace" ]]
}

function test_docargs_prototype ## - Check docargs prototype
{
    local proto_val="${__bar_protoregistry[cargo@docargs]}"
    [[ "$proto_val" == "extcomp cargo \${CARGO_TOOLCHAIN} doc --workspace" ]]
}

function test_miriargs_prototype ## - Check miriargs prototype
{
    local proto_val="${__bar_protoregistry[cargo@miriargs]}"
    [[ "$proto_val" == "extcomp cargo +nightly miri test" ]]
}

function test_toolchain_expansion ## - Test ${CARGO_TOOLCHAIN} expansion
{
    export CARGO_TOOLCHAIN="+stable"
    __bar_comp_extcomp cargo '${CARGO_TOOLCHAIN}' build --workspace --help &>/dev/null || return 0
    return 0
}

function test_actual_cargo_completion ## - Test actual cargo build completion in project
{
    command -v cargo &>/dev/null && [[ -d tests/helloworld ]] || return 0
    (
        cd tests/helloworld || exit 0
        __bar_comp_extcomp cargo build --workspace -- &>/dev/null || exit 0
    )
    return 0
}

## Run all cargo variable expansion tests
rule test_cargo_variable_expansion: -- test_buildargs_registered
rule test_cargo_variable_expansion: -- test_buildargs_format
rule test_cargo_variable_expansion: -- test_get_completer_buildargs
rule test_cargo_variable_expansion: -- test_completion_with_toolchain
rule test_cargo_variable_expansion: -- test_testargs_prototype
rule test_cargo_variable_expansion: -- test_docargs_prototype
rule test_cargo_variable_expansion: -- test_miriargs_prototype
rule test_cargo_variable_expansion: -- test_toolchain_expansion
rule test_cargo_variable_expansion: -- test_actual_cargo_completion
