#!/bash
# shellcheck disable=2016

rule is_cargo_installed: 'is_command_installed cargo'

function is_cargo_project ## - Checks if 'Cargo.toml' exists
{
    if [[ -f "Cargo.toml" ]]; then
        debug "is cargo project"
        return 0
    else
        trace "is not a cargo project"
        return 1
    fi
}

memofn is_cargo_project

rule lint_sources: is_cargo_project? cargo_lint??
rule build_unit_tests: is_cargo_project? cargo_build_unit_tests
rule test_units: is_cargo_project? cargo_test_units

rule build_integration_tests: is_cargo_project? cargo_build_integration_tests
rule test_integrations: is_cargo_project? cargo_test_integrations

rule test_expensive: is_cargo_project? cargo_outdated
rule test_expensive: is_cargo_project? cargo_miri
rule test_expensive: is_cargo_project? cargo_check_msrv
rule test_expensive: is_cargo_project? cargo_mutants

rule audit: is_cargo_project? cargo_audit
rule audit: is_cargo_project? cargo_audit

rule build_libs: is_cargo_project? 'cargo_build --lib --quiet'
rule build_bins: is_cargo_project? 'cargo build --bins --quiet'
rule build_docs: is_cargo_project? 'cargo_doc --quiet'

rule build_benches: is_cargo_project? 'cargo_build --benches --quiet'
rule build_examples: is_cargo_project? 'cargo_build --examples --quiet'

rule clean: is_cargo_project? 'cargo clean'

rule testdir_enter_hook: is_cargo_project? cargo_cache_artifacts

rule fmt: is_cargo_project? cargo_fmt
rule update: is_cargo_project? cargo_update
rule fix: is_cargo_project? cargo_fix

# running benchmarks
rule benchmark: is_cargo_project? cargo_bench

