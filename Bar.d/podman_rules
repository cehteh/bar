# -*- mode: sh; sh-shell: bash -*-
# vim: set ft=bash:
# shellcheck shell=bash
# shellcheck disable=2016

### Podman support rules for Bar
###
### Integrates podman container support with Bar's standard build system.
### Provides hooks for container-based builds and tests.

## Check if podman is available on this system
rule is_podman_installed: 'is_command_installed podman'

## Verify podman is properly configured and ready to use
rule podman_check_deps: is_podman_installed -- '
    require podman
    local native_arch
    native_arch=$(podman_get_native_arch)
    if ! is_podman_arch_available "$native_arch"; then
        warn "Native architecture not properly detected"
        return 1
    fi
    info "Podman $(podman_version) is ready (native: $native_arch)"
'

## Setup QEMU for multi-architecture support
rule podman_setup_qemu: is_podman_installed -- '
    require podman
    podman_arch_setup
'

## List all available architectures
rule podman_list_archs: is_podman_installed -- '
    require podman
    echo "Available architectures:"
    podman_list_available_archs
'

## Example: Build a layered image with Bar and Rust toolchain
rule podman_example_layered_build: is_podman_installed -- '
    require podman
    echo "Building layered image example..."
    podman_layer_bar example-bar:latest debian:stable-slim
    podman_layer_toolchain example-rust:latest example-bar:latest rust
    podman_layer_dev example-dev:latest example-rust:latest
    echo "Layered images created: example-bar, example-rust, example-dev"
'

## List all podman networks
rule podman_list_networks: is_podman_installed -- '
    require podman
    echo "Podman networks:"
    podman_network_list
'

## Example: Create network with security preset
rule podman_example_network_preset: is_podman_installed -- '
    require podman
    echo "Creating networks with security presets..."
    podman_network_preset example-public public || true
    podman_network_preset example-private private || true
    podman_network_preset example-isolated isolated || true
    echo "Example networks created"
    podman_network_list
'

## Example: Configure custom firewall rules
rule podman_example_firewall: is_podman_installed -- '
    require podman
    echo "Configuring custom firewall rules..."
    podman_firewall_config custom-net
    podman_firewall_allow_port custom-net 443 tcp
    podman_firewall_allow_port custom-net 80 tcp
    podman_firewall_allow_network custom-net 192.168.1.0/24
    podman_firewall_deny_all custom-net
    podman_firewall_show custom-net
'
